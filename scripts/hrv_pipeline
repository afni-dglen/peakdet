#!/usr/bin/env bash

function Usage {
    cat << USAGE

Description:

    hrv_pipeline runs a simple peak detection workflow using the peakdet
    package (see https://github.com/rmarkello/peakdet). It accepts raw
    physiological files and outputs a summary file with requested HRV
    measurements.

    The first time this script is run, it will check for a conda installation
    and install it if doesn't already exist. It will also create a peakdet
    environment for use. This may take some time, but will only need to be done
    once. Thereafter, you can use hrv_pipeline -u to upgrade the pipeline.

Optional arguments:

    -i          ONLY install the pipeline. This should only be done once; after
                that point this should have no effect. Calling this program
                without specifying this option will also install the pipeline.
    -u          Upgrade the pipeline. You probably only need to do this once in
                a blue moon.

USAGE
    return 0
}

function check_conda_install() {
    # check for existence of conda.sh file and source if it exists
    # if it doesn't, assume miniconda isn't installed and go for gold
    condash="${HOME}/miniconda3/etc/profile.d/conda.sh"
    if [ -f "${condash}" ]; then
        source ${condash}
    else
        echo 'Installing miniconda3. This should only happen once but might take a while.'
        # download miniconda installer
        miniconda_installer=${PWD}/miniconda.sh
        curl -sSL --retry 5 -o ${miniconda_installer} ${URL}
        /bin/bash ${miniconda_installer} -b -p ${HOME}/miniconda3
        rm -f ${miniconda_installer}
        # source conda.sh
        source ${condash}
        # set some conda config defaults
        conda config --system --prepend channels conda-forge
        conda config --system --set auto_update_conda false
        conda config --system --set show_channel_urls true
    fi
}

function check_peakdet_env() {
    # see if peakdet env exists
    if [ -z "$( conda env list | grep peakdet )" ]; then
        echo 'Creating peakdet environment. This should only happen once but might take a while'
        env_file=https://github.com/rmarkello/peakdet/blob/master/scripts/environment.yml
        curl -sSL --retry 5 -o ${PWD}/env.yml ${env_file}
        conda env create -f ${PWD}/env.yml
        rm -f ${PWD}/env.yml
    else
        conda activate peakdet
    fi

    if [ "$INSTALL_ONLY" -eq 1 ]; then
        conda deactivate
    fi
}

# check command line options
UPDATE=0
INSTALL_ONLY=0
while getopts "hui" OPT; do
    case $OPT in
            h)
        Usage >&2
        exit 0
        ;;
            i)
        INSTALL_ONLY=1
        ;;
            u)
        UPDATE=1
        ;;
    esac
done

# get OS specifics
if [ "$( uname )" == "Darwin" ]; then
    # can't use entry-point on Mac OSX because Gooey requires framework build
    COMMAND="pythonw ${HOME}/miniconda3/envs/peakdet/lib/python3.6/site-packages/peakdet/cli/run.py"
    URL='https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh'
else
    COMMAND="python ${HOME}/miniconda3/envs/peakdet/lib/python3.6/site-packages/peakdet/cli/run.py"
    URL='https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh'
fi

# if we're just updating
if [ "$UPDATE" -eq 1 ]; then
    check_conda_install
    check_peakdet_env
    echo 'Updating peakdet for hrv_pipeline'
    pip install -U --no-deps --no-cache-dir https://github.com/rmarkello/peakdet/tarball/master
# if we're just installing
elif [ "$INSTALL_ONLY" -eq 1 ]; then
    check_conda_install
    check_peakdet_env
# "normal" run-through
else
    check_conda_install
    check_peakdet_env
    if [ -z "$( which peakdet 2> /dev/null )" ]; then
        cat << REINSTALL
Peakdet appears to have been improperly installed. Please remove the peakdet
environment in conda by typing:

    source ${HOME}/miniconda3/etc/profile.d/conda.sh
    conda remove -y -n peakgdet --all

and running this script again.
REINSTALL
        exit 1
    else
        ${COMMAND}
    fi
fi
